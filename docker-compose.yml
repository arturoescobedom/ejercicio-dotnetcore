version: "3.7"

volumes:
  postgres_data:

networks:
  backend:

services:
  postgres:
    image: postgres:10-alpine
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib/postgresql/data
    - type: bind
      source: ./db_dumps
      target: /db_dumps
    - type: bind
      source: ./bin/dumpdb
      target: /usr/local/bin/dumpdb
      read_only: true
    - type: bind
      source: ./bin/restoredb
      target: /usr/local/bin/restoredb
      read_only: true
    ports:
    - published: ${EJERCICIO_2_PGPORT:-5432}
      target: 5432
    networks:
    - backend
    environment:
      POSTGRES_PASSWORD: 3x4mpl3P455w0rd

  web: &app
    image: docker-monterrey/ejercicio2:development
    build: &app_build
      context: ./MvcMovie
      dockerfile: Dockerfile
      target: development
    volumes:
    - type: bind
      source: ./MvcMovie
      target: /app
    entrypoint: /app/dev-entrypoint.sh
    command: dotnet watch run
    networks:
    - backend
    depends_on:
    - postgres

    stdin_open: true
    tty: true

    ports:
    - published: ${EJEMPLO_2_WEB_PORT:-5000}
      target: 5000
    environment:
      DATABASE_URL: postgres://postgres:3x4mpl3P455w0rd@postgres:5432/demo_development
      PORT: 5000

  web_benchmark:
    <<: *app
    image: docker-monterrey/ejercicio2:latest
    build:
      <<: *app_build
      target: deployable
    volumes: []
    entrypoint: []
    ports:
    - published: ${EJEMPLO_2_WEB_BENCHMARK_PORT:-5001}
      target: 5000
